πρόγραμμα finalCode_1
	δήλωση a, b, c , f


	συνάρτηση max(x, y)
		διαπροσωπεία
		είσοδος x, y
		δήλωση x1, x2


		συνάρτηση absDiff(p, q)
			διαπροσωπεία
			είσοδος p, q

			αρχή_συνάρτησης
			γράψε p;
			γράψε q;

			 γράψε 666;
             γράψε f;
             γράψε 666;

			εάν p - q >= 0 τότε
				absDiff := p - q
			αλλιώς
				absDiff := q - p
		    εάν_τέλος

			τέλος_συνάρτησης


    {caller and callee different level case}
	αρχή_συνάρτησης
	    x1 := x + y;
	    x2 := absDiff(x, y);
	    γράψε x1;
	    γράψε 555;
	    γράψε a;
	    γράψε 555;
	    γράψε x2;
	    γράψε c;
	    γράψε x1 + x2 ;
		max := (x1 + x2) / c
	τέλος_συνάρτησης




	συνάρτηση min(i, j)
    		διαπροσωπεία
    		είσοδος i , j

    αρχή_συνάρτησης
        εάν i < j τότε
            min := i
        αλλιώς
            min := j
        εάν_τέλος

    τέλος_συνάρτησης


    διαδικασία factor(n)
    	διαπροσωπεία
    	είσοδος n
    	δήλωση temp
    	αρχή_διαδικασίας
    		γράψε n;

    		εάν n = 0 τότε
    			f := 1
    		αλλιώς
    			temp := n - 1;
    			εκτέλεσε factor(temp);
    			f := f * n
    		εάν_τέλος
    	τέλος_διαδικασίας



αρχή_προγράμματος
a := 5;
b := 13;
c := 2;
f := 30;
γράψε max(a, b);
γράψε 999;
γράψε 999;
γράψε 999;
γράψε min( min((4 + 100/10) / 2, 20) , min(4, 76)) / 1 ;
γράψε 999;
γράψε 999;
γράψε 999;
γράψε f
τέλος_προγράμματος
